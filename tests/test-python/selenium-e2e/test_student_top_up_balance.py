# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
import pytest
import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

class TestTopUpUserBalance():
  def setup_method(self, method):
    self.driver = webdriver.Firefox()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_topUpUserBalance(self):
    self.driver.get("http://localhost:8081/login")
    self.driver.set_window_size(1352, 693)
    self.driver.find_element(By.ID, "username").click()
    self.driver.find_element(By.ID, "username").send_keys("student1@example.com")
    self.driver.find_element(By.ID, "password").send_keys("pass123")
    self.driver.find_element(By.ID, "password").send_keys(Keys.ENTER)
    WebDriverWait(self.driver, 10).until(EC.presence_of_element_located((By.ID, "header-balance")))

    # 1. Lire le solde initial
    header_balance_element = self.driver.find_element(By.ID, "header-balance")
    initial_balance_text = header_balance_element.text.replace('Balance: $', '')
    initial_balance = float(initial_balance_text)

    # 2. Naviguer vers la page de rechargement
    top_up_link = WebDriverWait(self.driver, 10).until(EC.element_to_be_clickable((By.LINK_TEXT, "Top Up Balance")))
    top_up_link.click()
    
    # Attendre que la page de solde se charge
    WebDriverWait(self.driver, 10).until(EC.presence_of_element_located((By.CSS_SELECTOR, "h1[class*='Account Balance']")))
    self.driver.find_element(By.ID, "amount").click()
    self.driver.find_element(By.ID, "amount").send_keys("10")
    self.driver.find_element(By.CSS_SELECTOR, ".hover\\3A bg-blue-700").click()
    element = self.driver.find_element(By.LINK_TEXT, "Logout")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.LINK_TEXT, "Logout").click()
  
